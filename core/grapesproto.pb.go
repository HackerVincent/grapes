// Code generated by protoc-gen-go.
// source: grapesproto.proto
// DO NOT EDIT!

/*
Package core is a generated protocol buffer package.

It is generated from these files:
	grapesproto.proto

It has these top-level messages:
	NodeInfo
	ClusterInfos
*/
package core

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeType int32

const (
	NodeType_MASTER   NodeType = 0
	NodeType_FRONTEND NodeType = 1
	NodeType_BACKEND  NodeType = 2
)

var NodeType_name = map[int32]string{
	0: "MASTER",
	1: "FRONTEND",
	2: "BACKEND",
}
var NodeType_value = map[string]int32{
	"MASTER":   0,
	"FRONTEND": 1,
	"BACKEND":  2,
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}
func (NodeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SystemEvent int32

const (
	SystemEvent_REQUEST_JOIN_CLUSTER SystemEvent = 0
	SystemEvent_NOTIFY_SYNC_CLUSTER  SystemEvent = 1
)

var SystemEvent_name = map[int32]string{
	0: "REQUEST_JOIN_CLUSTER",
	1: "NOTIFY_SYNC_CLUSTER",
}
var SystemEvent_value = map[string]int32{
	"REQUEST_JOIN_CLUSTER": 0,
	"NOTIFY_SYNC_CLUSTER":  1,
}

func (x SystemEvent) String() string {
	return proto.EnumName(SystemEvent_name, int32(x))
}
func (SystemEvent) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type NodeInfo struct {
	Ip           string   `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port         string   `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	Type         NodeType `protobuf:"varint,3,opt,name=type,enum=core.NodeType" json:"type,omitempty"`
	InsteristCmd []uint32 `protobuf:"varint,4,rep,packed,name=insteristCmd" json:"insteristCmd,omitempty"`
}

func (m *NodeInfo) Reset()                    { *m = NodeInfo{} }
func (m *NodeInfo) String() string            { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()               {}
func (*NodeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *NodeInfo) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *NodeInfo) GetType() NodeType {
	if m != nil {
		return m.Type
	}
	return NodeType_MASTER
}

func (m *NodeInfo) GetInsteristCmd() []uint32 {
	if m != nil {
		return m.InsteristCmd
	}
	return nil
}

type ClusterInfos struct {
	Info []*NodeInfo `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
}

func (m *ClusterInfos) Reset()                    { *m = ClusterInfos{} }
func (m *ClusterInfos) String() string            { return proto.CompactTextString(m) }
func (*ClusterInfos) ProtoMessage()               {}
func (*ClusterInfos) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ClusterInfos) GetInfo() []*NodeInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*NodeInfo)(nil), "core.NodeInfo")
	proto.RegisterType((*ClusterInfos)(nil), "core.ClusterInfos")
	proto.RegisterEnum("core.NodeType", NodeType_name, NodeType_value)
	proto.RegisterEnum("core.SystemEvent", SystemEvent_name, SystemEvent_value)
}

func init() { proto.RegisterFile("grapesproto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0x5d, 0x4b, 0xc3, 0x30,
	0x14, 0x86, 0x4d, 0x5b, 0xe6, 0x3c, 0xad, 0x65, 0x1e, 0x05, 0x73, 0x59, 0x7a, 0x55, 0x76, 0x51,
	0x70, 0xfe, 0x01, 0x67, 0xed, 0xa0, 0x7e, 0xa4, 0x98, 0x76, 0x17, 0xbb, 0x2a, 0xea, 0x32, 0x29,
	0xb8, 0x26, 0xb4, 0x71, 0xd0, 0x7f, 0x2f, 0x89, 0x22, 0x7a, 0x13, 0x72, 0xde, 0x07, 0x9e, 0xf7,
	0x70, 0xe0, 0xec, 0xbd, 0x7f, 0x51, 0x62, 0x50, 0xbd, 0xd4, 0x32, 0xb5, 0x2f, 0x7a, 0x6f, 0xb2,
	0x17, 0xf1, 0x01, 0xa6, 0x4c, 0x6e, 0x45, 0xd1, 0xed, 0x24, 0x86, 0xe0, 0xb4, 0x8a, 0x92, 0x88,
	0x24, 0x27, 0xdc, 0x69, 0x15, 0x22, 0x78, 0x4a, 0xf6, 0x9a, 0x3a, 0x36, 0xb1, 0x7f, 0x8c, 0xc1,
	0xd3, 0xa3, 0x12, 0xd4, 0x8d, 0x48, 0x12, 0x2e, 0xc2, 0xd4, 0x48, 0x52, 0x63, 0xa8, 0x47, 0x25,
	0xb8, 0x65, 0x18, 0x43, 0xd0, 0x76, 0x83, 0x16, 0x7d, 0x3b, 0xe8, 0x6c, 0xbf, 0xa5, 0x5e, 0xe4,
	0x26, 0xa7, 0xfc, 0x5f, 0x16, 0x2f, 0x20, 0xc8, 0x3e, 0x3e, 0x4d, 0x60, 0xaa, 0x07, 0xe3, 0x6d,
	0xbb, 0x9d, 0xa4, 0x24, 0x72, 0x13, 0xff, 0xaf, 0xd7, 0x60, 0x6e, 0xd9, 0xfc, 0xea, 0x7b, 0x57,
	0xd3, 0x84, 0x00, 0x93, 0xa7, 0x65, 0x55, 0xe7, 0x7c, 0x76, 0x84, 0x01, 0x4c, 0x57, 0xbc, 0x64,
	0x75, 0xce, 0xee, 0x66, 0x04, 0x7d, 0x38, 0xbe, 0x5d, 0x66, 0x0f, 0x66, 0x70, 0xe6, 0x37, 0xe0,
	0x57, 0xe3, 0xa0, 0xc5, 0x3e, 0x3f, 0x88, 0x4e, 0x23, 0x85, 0x0b, 0x9e, 0x3f, 0xaf, 0xf3, 0xaa,
	0x6e, 0xee, 0xcb, 0x82, 0x35, 0xd9, 0xe3, 0xfa, 0xc7, 0x71, 0x09, 0xe7, 0xac, 0xac, 0x8b, 0xd5,
	0xa6, 0xa9, 0x36, 0x2c, 0xfb, 0x05, 0xe4, 0x75, 0x62, 0xaf, 0x75, 0xfd, 0x15, 0x00, 0x00, 0xff,
	0xff, 0xa4, 0xa8, 0x66, 0x6b, 0x42, 0x01, 0x00, 0x00,
}
